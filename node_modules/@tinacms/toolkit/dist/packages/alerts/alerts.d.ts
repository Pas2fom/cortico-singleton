/**

*/
import { EventBus, Callback, CMSEvent } from '../../packages/core';
export interface EventsToAlerts {
    [key: string]: ToAlert | AlertArgs;
}
export declare type ToAlert = (event: CMSEvent) => AlertArgs;
export interface AlertArgs {
    level: AlertLevel;
    message: string;
    timeout?: number;
}
export declare class Alerts {
    private events;
    private map;
    private alerts;
    private mapEventToAlert;
    constructor(events: EventBus, map?: EventsToAlerts);
    setMap(eventsToAlerts: EventsToAlerts): void;
    add(level: AlertLevel, message: string, timeout?: number): () => void;
    dismiss(alert: Alert): void;
    subscribe(cb: Callback): () => void;
    get all(): Alert[];
    info(message: string, timeout?: number): () => void;
    success(message: string, timeout?: number): () => void;
    warn(message: string, timeout?: number): () => void;
    error(message: string, timeout?: number): () => void;
}
export declare type AlertLevel = 'info' | 'success' | 'warn' | 'error';
export interface Alert {
    id: string;
    level: AlertLevel;
    message: string;
    timeout: number;
}
